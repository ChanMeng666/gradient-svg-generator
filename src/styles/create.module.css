/* Create Page Layout Styles */

.pageContainer {
  height: calc(100vh - 4rem);
  display: flex;
  overflow: hidden;
  position: relative;
}

.mainContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-width: 0;
  height: 100%;
}

@media (min-width: 1024px) {
  .mainContent {
    flex-direction: row;
  }
}

.canvasArea {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-width: 0;
  height: 100%;
  background-color: hsl(var(--muted) / 0.3);
}

.canvasHeader {
  flex-shrink: 0;
  border-bottom: 1px solid hsl(var(--border));
  background-color: hsl(var(--background) / 0.95);
  backdrop-filter: blur(8px);
  padding: 1rem;
}

.canvasContent {
  flex: 1;
  overflow: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

.canvasWrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2rem;
}

@media (max-width: 768px) {
  .canvasWrapper {
    padding: 1rem;
  }
}

/* Remove old preview styles */
.previewCard {
  /* deprecated */
}

.previewImage {
  /* deprecated */
}

.actionsBar {
  flex-shrink: 0;
  border-top: 1px solid hsl(var(--border));
  background-color: hsl(var(--background) / 0.95);
  backdrop-filter: blur(8px);
  padding: 1rem;
}

.propertiesPanel {
  width: 20rem;
  border-left: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  flex-shrink: 0;
  height: 100%;
  overflow: hidden;
}

@media (min-width: 1280px) {
  .propertiesPanel {
    width: 24rem;
  }
}

.propertiesContent {
  height: 100%;
  overflow-y: auto;
  padding: 1.5rem;
}

/* Ensure sidebar has proper height */
.sidebar {
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.sidebarScroll {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
}

/* Mobile specific adjustments */
@media (max-width: 768px) {
  .propertiesPanel {
    display: none;
  }
}

/* Color Row Styles for Properties Panel */
.colorRowWrapper {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.colorInputWrapper {
  display: flex;
  gap: 0.5rem;
  flex: 1;
}

.colorPicker {
  width: 40px;
  height: 40px;
  border: 1px solid hsl(var(--border));
  border-radius: 0.375rem;
  cursor: pointer;
}

.hexInput {
  flex: 1;
  padding: 0.5rem;
  border: 1px solid hsl(var(--border));
  border-radius: 0.375rem;
  background-color: hsl(var(--background));
  font-family: monospace;
  font-size: 0.875rem;
}

.colorActions {
  display: flex;
  gap: 0.25rem;
}

.colorActionButton {
  padding: 0.5rem;
  border: 1px solid hsl(var(--border));
  border-radius: 0.375rem;
  background-color: hsl(var(--background));
  cursor: pointer;
  transition: all 0.2s;
}

.colorActionButton:hover {
  background-color: hsl(var(--muted));
}